

kubectl apply -k  ./base
kubectl apply -k  ./overlays/production

kubectl get pod prod-frontend-deployment-6d9bf8d776-t78xq -o yaml 
kubectl get deploy prod-frontend-deployment -o yaml 
kubectl get svc prod-frontend -o yaml 
kubectl get configmap prod-frontend-configmap-m8dbmmkth5 -o yaml 



--
kustomize build ./overlays/production
kubectl -k build ./overlays/production
kubectl apply -k  ./overlays/production



kubectl create configmap backend-config --from-file=path/.env



# kubectl get pod my-pod -o yaml 




# /etc/resolv.conf


# backend-prod.default.svc.cluster.local










--------------
# manually create secrets

suffix=prod

MONGO_INITDB_DATABASE=app      
MONGO_INITDB_ROOT_USERNAME=
MONGO_INITDB_ROOT_PASSWORD=

#MONGO_HOST=mongo-prod.default.svc.cluster.local
#MONGO_HOST=mongo.default.svc.cluster.local
#MONGO_HOST=mongo-prod-0
MONGO_HOST=mongo-prod.default.svc.cluster.local

GMAIL_ADDRESS= 
GMAIL_OAUTH_CLIENT_ID=
GMAIL_OAUTH_CLIENT_SECRET=



# Create multiple YAML objects from stdin


cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: backend-env-secret-$suffix
type: Opaque
stringData:
  .env: |-
    GMAIL_ADDRESS=$GMAIL_ADDRESS
    GMAIL_OAUTH_CLIENT_ID=$GMAIL_OAUTH_CLIENT_ID
    GMAIL_OAUTH_CLIENT_SECRET=$GMAIL_OAUTH_CLIENT_SECRET
    MONGO_USER=$MONGO_INITDB_ROOT_USERNAME
    MONGO_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    MONGO_DB=$MONGO_INITDB_DATABASE
    MONGO_HOST=$MONGO_HOST

---

apiVersion: v1
kind: Secret
metadata:
    name: mongo-init-$suffix
type: Opaque
stringData:
    init.js: |-
        db = db.getSiblingDB("$MONGO_INITDB_DATABASE")
        db.createCollection("init")
        
        db.createUser(
          {
            user: "$MONGO_INITDB_ROOT_USERNAME",
            pwd: "$MONGO_INITDB_ROOT_PASSWORD",
            roles: [ { role: "readWrite", db: "$MONGO_INITDB_DATABASE" }]
          }
        )
data:
  MONGO_INITDB_ROOT_USERNAME: $(echo -n "$MONGO_INITDB_ROOT_USERNAME" | base64 -w0)
  MONGO_INITDB_ROOT_PASSWORD: $(echo -n "$MONGO_INITDB_ROOT_PASSWORD" | base64 -w0)
  MONGO_INITDB_DATABASE: $(echo -n "$MONGO_INITDB_DATABASE" | base64 -w0)

---

apiVersion: v1
kind: Secret
metadata:
    name: mongo-config-$suffix
type: Opaque
stringData:
    mongod.conf: |-
      setParameter:
          enableLocalhostAuthBypass: false

      security:
          authorization: enabled


EOF





------


# Create a secret with several keys
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: mysecret
type: Opaque
data:
  password: $(echo -n "s33msi4" | base64 -w0)
  username: $(echo -n "jane" | base64 -w0)
EOF

