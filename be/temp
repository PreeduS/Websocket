,
  "_moduleAliases": {
    "app": "app"
  }



=

  --------

  tsconfig.json

        "paths": {
            "*": [
                "node_modules/*",
                //"types/*"
            ],
            "app/*": ["./app/*"]
            
        }


      //"include": [
    //    "src/**/*"
    //],


----

    "start": "npm run build && node -r ./prod-paths.js ./build/index.js",
    "dev": "ts-node-dev -r tsconfig-paths/register --no-notify --files index.ts",


    "start": "npm run build && node ./build/index.js",

    "start": "npm run build && node -r ./setupAlias.js  ./build/index.js",
    "dev": "ts-node-dev --no-notify -r ./setupAlias.js --files index.ts",

    "dev_prev": "ts-node-dev --no-notify index.ts",
    "dev:nodemon": "nodemon",

       "wp:start": "webpack && node -r ./setupAlias.js  ./build-wp/index.js", 

    "__dev": "webpack -w && ts-node-dev --no-notify build-wp/index.ts",

       
----

remove:

module-alias/register

nodemon





    
nodemon.json
{
    "ignore": ["**/*.test.ts", "**/*.spec.ts", "build","node_modules"],
    "exec": "ts-node -r ./setupAlias.js ./index.ts",
    "ext": "ts"
  }


---

routes


//app.get('/user/:id', [passport.authenticate('jwt', {session: false, /*successRedirect: '/user/d/self', failureRedirect: '/user/d/other'*/})], 
//  app.get('/user/:username?', [passport.authenticate('jwt', {session: false, failureRedirect: '/user/other'})], 

//app.get('/user/self',[passport.authenticate('jwt', {session: false})], (req, res) => {   console.log('req user self ',req.user);  res.send('/user/self ' + req.params.username) })
//app.get('/user/other', (req, res) => {   console.log('req user other',req.user); res.send('/user/other '+ req.params.id) })



/*app.get('/user', [passport.authenticate('jwt', {session: false})], (req, res) => {
    
    return res.send('user/self ' + req.user.username)
}) */






//const router = require('express').Router();

//----
//const setupRoutes = (app: Express) => {
    //app.get('/', (req, res) => { res.send('home'); });

    //app.use('/auth',router );

//----

//router.get('/test',  (req, res) =>  res.send('test') )
//router.get('/secret/local', passport.authenticate('local', {session: false}) , (req, res) =>  res.send('secret local') )
 
//router.get('/secret/jwt', passport.authenticate('jwt', {session: false}) , (req, res) =>  res.send('secret jwt') )

//  passport.authenticate('local', { failureRedirect: '/login' }),


    //router.post('/signIn', [signInValidation], signIn);
    //router.post('/signUp', [signUpValidation], signUp);