def DOCKER_USER="preedus"
def APP_FE="testapp-fe"


// pending, success, failure
def setGithubStatus(state){

    withCredentials([string(credentialsId: 'github-status', variable: 'TOKEN')]) { 
        echo "Build status: $state"
        sh "echo hash: \$(git rev-parse HEAD)"

        sh """
            curl -XPOST -H "Authorization: token $TOKEN" https://api.github.com/repos/preedus/websocket/statuses/\$(git rev-parse HEAD) -d '{
            \"state\": \"$state\",
            \"description\": \"Build status: $state\",
            \"target_url\": \"http://kmaster-v2:30008/job/status-test/$BUILD_NUMBER/console\"
            }'
        """

        // curl "https://api.GitHub.com/repos/<GitHubUserName>/<REPO_NAME>/statuses/$GIT_COMMIT?access_token=<YOUR_GITHUB_TOKEN>" \
        // https://api.github.com/repos/preedus/websocket
    }

}



pipeline {
    agent any

    stages {
        stage("github-status") {
            steps {
                dir('tmpdir') {
                    script {
                        sh 'ls -la'
                        //sh 'git clone https://github.com/PreeduS/Websocket .'
                        //sh 'git checkout -b test-branch-prevention origin/test-branch-prevention'
                        //sh 'git pull'
                        
                        setGithubStatus('pending')

                        env.fe_build="0"
                        /*
                        env.fe_build=sh script:"""

                            sudo docker build -t "$DOCKER_USER/$APP_FE:temp" . && \
                            sudo docker run --network="app-net" \
                            --name app-fe-container -p 80:80 \
                            --restart=always -d \
                            -e API_HOST=http://192.168.100.20 \
                            -e API_PORT=5000 \
                            "$DOCKER_USER/$APP_FE:temp" && echo 0 || echo 1

                        

                        """, returnStdout: true
                        */

                        sleep(10)

                        if (env.fe_build == '0') {
                           setGithubStatus('success')
                        } else {
                            setGithubStatus('failure')
                        }
                    }    
                }
            }
        }
    }

    post {
        always{
            //sh 'rm -rf tmpdir'
            sh "echo done"
        }
    }


}